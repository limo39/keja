name: Keja Django CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirement.txt', 'requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirement.txt

      - name: Run Django System Checks
        run: |
          python manage.py check
        env:
          DJANGO_SETTINGS_MODULE: keja.settings

      - name: Run Migrations Check
        run: |
          python manage.py makemigrations --check --dry-run
        env:
          DJANGO_SETTINGS_MODULE: keja.settings

      - name: Run Tests
        run: |
          python manage.py test
        env:
          DJANGO_SETTINGS_MODULE: keja.settings

      - name: Generate Coverage Report
        run: |
          pip install coverage
          coverage run --source='.' manage.py test
          coverage xml
        env:
          DJANGO_SETTINGS_MODULE: keja.settings

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  lint:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run Black (Code Formatting Check)
        run: |
          black --check --diff .

      - name: Run isort (Import Sorting Check)
        run: |
          isort --check-only --diff .

      - name: Run Flake8 (Linting)
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  security:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run Bandit (Security Linting)
        run: |
          bandit -r . -x */tests.py,*/test_*.py

      - name: Run Safety (Dependency Security Check)
        run: |
          pip install -r requirement.txt
          safety check
